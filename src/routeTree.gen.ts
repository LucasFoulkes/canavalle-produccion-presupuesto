/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppReportesRouteImport } from './routes/app/reportes'
import { Route as AppEstadosFenologicosRouteImport } from './routes/app/estados-fenologicos'
import { Route as AppConfiguracionRouteImport } from './routes/app/configuracion'
import { Route as AppCompartirRouteImport } from './routes/app/compartir'
import { Route as AppCamasRouteImport } from './routes/app/camas'
import { Route as AppCamaDetailRouteImport } from './routes/app/cama-detail'
import { Route as AppBloquesRouteImport } from './routes/app/bloques'
import { Route as AppAssignCamasRouteImport } from './routes/app/assign-camas'

const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppReportesRoute = AppReportesRouteImport.update({
  id: '/reportes',
  path: '/reportes',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppEstadosFenologicosRoute = AppEstadosFenologicosRouteImport.update({
  id: '/estados-fenologicos',
  path: '/estados-fenologicos',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppConfiguracionRoute = AppConfiguracionRouteImport.update({
  id: '/configuracion',
  path: '/configuracion',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppCompartirRoute = AppCompartirRouteImport.update({
  id: '/compartir',
  path: '/compartir',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppCamasRoute = AppCamasRouteImport.update({
  id: '/camas',
  path: '/camas',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppCamaDetailRoute = AppCamaDetailRouteImport.update({
  id: '/cama-detail',
  path: '/cama-detail',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppBloquesRoute = AppBloquesRouteImport.update({
  id: '/bloques',
  path: '/bloques',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAssignCamasRoute = AppAssignCamasRouteImport.update({
  id: '/assign-camas',
  path: '/assign-camas',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/assign-camas': typeof AppAssignCamasRoute
  '/app/bloques': typeof AppBloquesRoute
  '/app/cama-detail': typeof AppCamaDetailRoute
  '/app/camas': typeof AppCamasRoute
  '/app/compartir': typeof AppCompartirRoute
  '/app/configuracion': typeof AppConfiguracionRoute
  '/app/estados-fenologicos': typeof AppEstadosFenologicosRoute
  '/app/reportes': typeof AppReportesRoute
  '/app/': typeof AppIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app/assign-camas': typeof AppAssignCamasRoute
  '/app/bloques': typeof AppBloquesRoute
  '/app/cama-detail': typeof AppCamaDetailRoute
  '/app/camas': typeof AppCamasRoute
  '/app/compartir': typeof AppCompartirRoute
  '/app/configuracion': typeof AppConfiguracionRoute
  '/app/estados-fenologicos': typeof AppEstadosFenologicosRoute
  '/app/reportes': typeof AppReportesRoute
  '/app': typeof AppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/assign-camas': typeof AppAssignCamasRoute
  '/app/bloques': typeof AppBloquesRoute
  '/app/cama-detail': typeof AppCamaDetailRoute
  '/app/camas': typeof AppCamasRoute
  '/app/compartir': typeof AppCompartirRoute
  '/app/configuracion': typeof AppConfiguracionRoute
  '/app/estados-fenologicos': typeof AppEstadosFenologicosRoute
  '/app/reportes': typeof AppReportesRoute
  '/app/': typeof AppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/assign-camas'
    | '/app/bloques'
    | '/app/cama-detail'
    | '/app/camas'
    | '/app/compartir'
    | '/app/configuracion'
    | '/app/estados-fenologicos'
    | '/app/reportes'
    | '/app/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app/assign-camas'
    | '/app/bloques'
    | '/app/cama-detail'
    | '/app/camas'
    | '/app/compartir'
    | '/app/configuracion'
    | '/app/estados-fenologicos'
    | '/app/reportes'
    | '/app'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/assign-camas'
    | '/app/bloques'
    | '/app/cama-detail'
    | '/app/camas'
    | '/app/compartir'
    | '/app/configuracion'
    | '/app/estados-fenologicos'
    | '/app/reportes'
    | '/app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/reportes': {
      id: '/app/reportes'
      path: '/reportes'
      fullPath: '/app/reportes'
      preLoaderRoute: typeof AppReportesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/estados-fenologicos': {
      id: '/app/estados-fenologicos'
      path: '/estados-fenologicos'
      fullPath: '/app/estados-fenologicos'
      preLoaderRoute: typeof AppEstadosFenologicosRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/configuracion': {
      id: '/app/configuracion'
      path: '/configuracion'
      fullPath: '/app/configuracion'
      preLoaderRoute: typeof AppConfiguracionRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/compartir': {
      id: '/app/compartir'
      path: '/compartir'
      fullPath: '/app/compartir'
      preLoaderRoute: typeof AppCompartirRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/camas': {
      id: '/app/camas'
      path: '/camas'
      fullPath: '/app/camas'
      preLoaderRoute: typeof AppCamasRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/cama-detail': {
      id: '/app/cama-detail'
      path: '/cama-detail'
      fullPath: '/app/cama-detail'
      preLoaderRoute: typeof AppCamaDetailRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/bloques': {
      id: '/app/bloques'
      path: '/bloques'
      fullPath: '/app/bloques'
      preLoaderRoute: typeof AppBloquesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/assign-camas': {
      id: '/app/assign-camas'
      path: '/assign-camas'
      fullPath: '/app/assign-camas'
      preLoaderRoute: typeof AppAssignCamasRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppAssignCamasRoute: typeof AppAssignCamasRoute
  AppBloquesRoute: typeof AppBloquesRoute
  AppCamaDetailRoute: typeof AppCamaDetailRoute
  AppCamasRoute: typeof AppCamasRoute
  AppCompartirRoute: typeof AppCompartirRoute
  AppConfiguracionRoute: typeof AppConfiguracionRoute
  AppEstadosFenologicosRoute: typeof AppEstadosFenologicosRoute
  AppReportesRoute: typeof AppReportesRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAssignCamasRoute: AppAssignCamasRoute,
  AppBloquesRoute: AppBloquesRoute,
  AppCamaDetailRoute: AppCamaDetailRoute,
  AppCamasRoute: AppCamasRoute,
  AppCompartirRoute: AppCompartirRoute,
  AppConfiguracionRoute: AppConfiguracionRoute,
  AppEstadosFenologicosRoute: AppEstadosFenologicosRoute,
  AppReportesRoute: AppReportesRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
