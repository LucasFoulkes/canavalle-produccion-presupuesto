/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppReportesRouteImport } from './routes/app/reportes'
import { Route as AppCompartirRouteImport } from './routes/app/compartir'
import { Route as AppMonitoreoIndexRouteImport } from './routes/app/monitoreo/index'
import { Route as AppConfiguracionIndexRouteImport } from './routes/app/configuracion/index'
import { Route as AppMonitoreoGruposRouteImport } from './routes/app/monitoreo/grupos'
import { Route as AppMonitoreoConfigRouteImport } from './routes/app/monitoreo/config'
import { Route as AppMonitoreoCamasRouteImport } from './routes/app/monitoreo/camas'
import { Route as AppMonitoreoCamaRouteImport } from './routes/app/monitoreo/cama'
import { Route as AppMonitoreoBloquesRouteImport } from './routes/app/monitoreo/bloques'
import { Route as AppMonitoreoBloqueRouteImport } from './routes/app/monitoreo/bloque'
import { Route as AppConfiguracionEstadosFenologicosRouteImport } from './routes/app/configuracion/estados-fenologicos'
import { Route as AppConfiguracionCamasRouteImport } from './routes/app/configuracion/camas'

const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppReportesRoute = AppReportesRouteImport.update({
  id: '/reportes',
  path: '/reportes',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppCompartirRoute = AppCompartirRouteImport.update({
  id: '/compartir',
  path: '/compartir',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMonitoreoIndexRoute = AppMonitoreoIndexRouteImport.update({
  id: '/monitoreo/',
  path: '/monitoreo/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppConfiguracionIndexRoute = AppConfiguracionIndexRouteImport.update({
  id: '/configuracion/',
  path: '/configuracion/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMonitoreoGruposRoute = AppMonitoreoGruposRouteImport.update({
  id: '/monitoreo/grupos',
  path: '/monitoreo/grupos',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMonitoreoConfigRoute = AppMonitoreoConfigRouteImport.update({
  id: '/monitoreo/config',
  path: '/monitoreo/config',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMonitoreoCamasRoute = AppMonitoreoCamasRouteImport.update({
  id: '/monitoreo/camas',
  path: '/monitoreo/camas',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMonitoreoCamaRoute = AppMonitoreoCamaRouteImport.update({
  id: '/monitoreo/cama',
  path: '/monitoreo/cama',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMonitoreoBloquesRoute = AppMonitoreoBloquesRouteImport.update({
  id: '/monitoreo/bloques',
  path: '/monitoreo/bloques',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMonitoreoBloqueRoute = AppMonitoreoBloqueRouteImport.update({
  id: '/monitoreo/bloque',
  path: '/monitoreo/bloque',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppConfiguracionEstadosFenologicosRoute =
  AppConfiguracionEstadosFenologicosRouteImport.update({
    id: '/configuracion/estados-fenologicos',
    path: '/configuracion/estados-fenologicos',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppConfiguracionCamasRoute = AppConfiguracionCamasRouteImport.update({
  id: '/configuracion/camas',
  path: '/configuracion/camas',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/logout': typeof LogoutRoute
  '/app/compartir': typeof AppCompartirRoute
  '/app/reportes': typeof AppReportesRoute
  '/app/': typeof AppIndexRoute
  '/app/configuracion/camas': typeof AppConfiguracionCamasRoute
  '/app/configuracion/estados-fenologicos': typeof AppConfiguracionEstadosFenologicosRoute
  '/app/monitoreo/bloque': typeof AppMonitoreoBloqueRoute
  '/app/monitoreo/bloques': typeof AppMonitoreoBloquesRoute
  '/app/monitoreo/cama': typeof AppMonitoreoCamaRoute
  '/app/monitoreo/camas': typeof AppMonitoreoCamasRoute
  '/app/monitoreo/config': typeof AppMonitoreoConfigRoute
  '/app/monitoreo/grupos': typeof AppMonitoreoGruposRoute
  '/app/configuracion': typeof AppConfiguracionIndexRoute
  '/app/monitoreo': typeof AppMonitoreoIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/logout': typeof LogoutRoute
  '/app/compartir': typeof AppCompartirRoute
  '/app/reportes': typeof AppReportesRoute
  '/app': typeof AppIndexRoute
  '/app/configuracion/camas': typeof AppConfiguracionCamasRoute
  '/app/configuracion/estados-fenologicos': typeof AppConfiguracionEstadosFenologicosRoute
  '/app/monitoreo/bloque': typeof AppMonitoreoBloqueRoute
  '/app/monitoreo/bloques': typeof AppMonitoreoBloquesRoute
  '/app/monitoreo/cama': typeof AppMonitoreoCamaRoute
  '/app/monitoreo/camas': typeof AppMonitoreoCamasRoute
  '/app/monitoreo/config': typeof AppMonitoreoConfigRoute
  '/app/monitoreo/grupos': typeof AppMonitoreoGruposRoute
  '/app/configuracion': typeof AppConfiguracionIndexRoute
  '/app/monitoreo': typeof AppMonitoreoIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/logout': typeof LogoutRoute
  '/app/compartir': typeof AppCompartirRoute
  '/app/reportes': typeof AppReportesRoute
  '/app/': typeof AppIndexRoute
  '/app/configuracion/camas': typeof AppConfiguracionCamasRoute
  '/app/configuracion/estados-fenologicos': typeof AppConfiguracionEstadosFenologicosRoute
  '/app/monitoreo/bloque': typeof AppMonitoreoBloqueRoute
  '/app/monitoreo/bloques': typeof AppMonitoreoBloquesRoute
  '/app/monitoreo/cama': typeof AppMonitoreoCamaRoute
  '/app/monitoreo/camas': typeof AppMonitoreoCamasRoute
  '/app/monitoreo/config': typeof AppMonitoreoConfigRoute
  '/app/monitoreo/grupos': typeof AppMonitoreoGruposRoute
  '/app/configuracion/': typeof AppConfiguracionIndexRoute
  '/app/monitoreo/': typeof AppMonitoreoIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/logout'
    | '/app/compartir'
    | '/app/reportes'
    | '/app/'
    | '/app/configuracion/camas'
    | '/app/configuracion/estados-fenologicos'
    | '/app/monitoreo/bloque'
    | '/app/monitoreo/bloques'
    | '/app/monitoreo/cama'
    | '/app/monitoreo/camas'
    | '/app/monitoreo/config'
    | '/app/monitoreo/grupos'
    | '/app/configuracion'
    | '/app/monitoreo'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/logout'
    | '/app/compartir'
    | '/app/reportes'
    | '/app'
    | '/app/configuracion/camas'
    | '/app/configuracion/estados-fenologicos'
    | '/app/monitoreo/bloque'
    | '/app/monitoreo/bloques'
    | '/app/monitoreo/cama'
    | '/app/monitoreo/camas'
    | '/app/monitoreo/config'
    | '/app/monitoreo/grupos'
    | '/app/configuracion'
    | '/app/monitoreo'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/logout'
    | '/app/compartir'
    | '/app/reportes'
    | '/app/'
    | '/app/configuracion/camas'
    | '/app/configuracion/estados-fenologicos'
    | '/app/monitoreo/bloque'
    | '/app/monitoreo/bloques'
    | '/app/monitoreo/cama'
    | '/app/monitoreo/camas'
    | '/app/monitoreo/config'
    | '/app/monitoreo/grupos'
    | '/app/configuracion/'
    | '/app/monitoreo/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  LogoutRoute: typeof LogoutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/reportes': {
      id: '/app/reportes'
      path: '/reportes'
      fullPath: '/app/reportes'
      preLoaderRoute: typeof AppReportesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/compartir': {
      id: '/app/compartir'
      path: '/compartir'
      fullPath: '/app/compartir'
      preLoaderRoute: typeof AppCompartirRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/monitoreo/': {
      id: '/app/monitoreo/'
      path: '/monitoreo'
      fullPath: '/app/monitoreo'
      preLoaderRoute: typeof AppMonitoreoIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/configuracion/': {
      id: '/app/configuracion/'
      path: '/configuracion'
      fullPath: '/app/configuracion'
      preLoaderRoute: typeof AppConfiguracionIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/monitoreo/grupos': {
      id: '/app/monitoreo/grupos'
      path: '/monitoreo/grupos'
      fullPath: '/app/monitoreo/grupos'
      preLoaderRoute: typeof AppMonitoreoGruposRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/monitoreo/config': {
      id: '/app/monitoreo/config'
      path: '/monitoreo/config'
      fullPath: '/app/monitoreo/config'
      preLoaderRoute: typeof AppMonitoreoConfigRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/monitoreo/camas': {
      id: '/app/monitoreo/camas'
      path: '/monitoreo/camas'
      fullPath: '/app/monitoreo/camas'
      preLoaderRoute: typeof AppMonitoreoCamasRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/monitoreo/cama': {
      id: '/app/monitoreo/cama'
      path: '/monitoreo/cama'
      fullPath: '/app/monitoreo/cama'
      preLoaderRoute: typeof AppMonitoreoCamaRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/monitoreo/bloques': {
      id: '/app/monitoreo/bloques'
      path: '/monitoreo/bloques'
      fullPath: '/app/monitoreo/bloques'
      preLoaderRoute: typeof AppMonitoreoBloquesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/monitoreo/bloque': {
      id: '/app/monitoreo/bloque'
      path: '/monitoreo/bloque'
      fullPath: '/app/monitoreo/bloque'
      preLoaderRoute: typeof AppMonitoreoBloqueRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/configuracion/estados-fenologicos': {
      id: '/app/configuracion/estados-fenologicos'
      path: '/configuracion/estados-fenologicos'
      fullPath: '/app/configuracion/estados-fenologicos'
      preLoaderRoute: typeof AppConfiguracionEstadosFenologicosRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/configuracion/camas': {
      id: '/app/configuracion/camas'
      path: '/configuracion/camas'
      fullPath: '/app/configuracion/camas'
      preLoaderRoute: typeof AppConfiguracionCamasRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppCompartirRoute: typeof AppCompartirRoute
  AppReportesRoute: typeof AppReportesRoute
  AppIndexRoute: typeof AppIndexRoute
  AppConfiguracionCamasRoute: typeof AppConfiguracionCamasRoute
  AppConfiguracionEstadosFenologicosRoute: typeof AppConfiguracionEstadosFenologicosRoute
  AppMonitoreoBloqueRoute: typeof AppMonitoreoBloqueRoute
  AppMonitoreoBloquesRoute: typeof AppMonitoreoBloquesRoute
  AppMonitoreoCamaRoute: typeof AppMonitoreoCamaRoute
  AppMonitoreoCamasRoute: typeof AppMonitoreoCamasRoute
  AppMonitoreoConfigRoute: typeof AppMonitoreoConfigRoute
  AppMonitoreoGruposRoute: typeof AppMonitoreoGruposRoute
  AppConfiguracionIndexRoute: typeof AppConfiguracionIndexRoute
  AppMonitoreoIndexRoute: typeof AppMonitoreoIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCompartirRoute: AppCompartirRoute,
  AppReportesRoute: AppReportesRoute,
  AppIndexRoute: AppIndexRoute,
  AppConfiguracionCamasRoute: AppConfiguracionCamasRoute,
  AppConfiguracionEstadosFenologicosRoute:
    AppConfiguracionEstadosFenologicosRoute,
  AppMonitoreoBloqueRoute: AppMonitoreoBloqueRoute,
  AppMonitoreoBloquesRoute: AppMonitoreoBloquesRoute,
  AppMonitoreoCamaRoute: AppMonitoreoCamaRoute,
  AppMonitoreoCamasRoute: AppMonitoreoCamasRoute,
  AppMonitoreoConfigRoute: AppMonitoreoConfigRoute,
  AppMonitoreoGruposRoute: AppMonitoreoGruposRoute,
  AppConfiguracionIndexRoute: AppConfiguracionIndexRoute,
  AppMonitoreoIndexRoute: AppMonitoreoIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  LogoutRoute: LogoutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
